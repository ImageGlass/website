@model PaginatedList<ReleaseModel>


@* Posts list *@
<div class="container py-5 mx-auto">
  <h1 class="aniFadeIn">All releases</h1>

  @* Ads *@
  <div class="mb-5 aniSlideUp ani-delay-25">
    <div class="sidebar-item section-quang-cao">
      @await Html.PartialAsync("_Ads")
    </div>
  </div>

  <section class="post-list aniSlideUp ani-delay-50">
    <ul>
      @foreach (var item in Model)
      {
        var badgeClass = item.ReleaseChannel != "stable" ? "badge-2" : "";

        <li>
          <a class="post-item" asp-action="ReleaseDetailPage" asp-route-slugId="@item.SlugAndId" title="@item.Title">
            <div class="post-image">
              <img src="@item.Image" alt="@item.Title" onerror="this.hidden = true" />
              <div class="post-badge @badgeClass text-uppercase" title="@item.ReleaseChannel.ToUpperInvariant() release">
                @item.ReleaseChannel
              </div>
            </div>
            <div class="post-body">
              <div class="post-title">
                @item.Title
              </div>
              <div class="post-date">
                <div>Version @item.Version</div>
                <time datetime="@item.UpdatedDate">
                  @item.UpdatedDate.ToDateString()
                </time>
              </div>
            </div>
          </a>
        </li>
      }
    </ul>

    @{
      var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
      var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <div class="post-list-pagination">
      <a asp-action="AllReleasesListingPage" asp-route-page="@(Model.PageIndex - 1)" tabindex="@(Model.HasPreviousPage ? 0 : -1)"
        class="@prevDisabled">
        View back
      </a>

      <a asp-action="AllReleasesListingPage" asp-route-page="@(Model.PageIndex + 1)" tabindex="@(Model.HasNextPage ? 0 : -1)"
        class="@nextDisabled">
        View next
      </a>
    </div>
  </section>
</div>
